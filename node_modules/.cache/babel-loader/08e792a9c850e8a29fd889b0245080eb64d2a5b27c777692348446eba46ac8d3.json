{"ast":null,"code":"/* eslint-disable promise/prefer-await-to-then */\n/* global define */\n'use strict';\n\n(function (root, cx) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['isomorphic-fetch'], cx);\n  } else if (typeof exports === 'object') {\n    // Node, CommonJS-like\n    module.exports = cx(require('isomorphic-fetch'));\n  } else {\n    // Browser globals (root is window)\n    root.movieTrailer = cx(root.fetch);\n  }\n})(this, fetch => {\n  function handleErrors(error) {\n    const message = error && error.message ? error.message : error;\n    console.warn(`movie-trailer: ${message}`);\n    // Throw Error( error.message )\n  }\n\n  function handleFetchErrors(response) {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response;\n  }\n  function toUrl(videoId) {\n    return encodeURI('https://www.youtube.com/watch?v=' + videoId);\n  }\n  function getMovieId(search, options) {\n    /* Fetch a Movie ID for querying the TMDB API */\n\n    const endpoint = 'https://api.themoviedb.org' + encodeURI('/3/search/movie?api_key=' + options.apiKey + '&query=' + search + (options.year === null ? '' : '&year=' + options.year) + (options.language === null ? '' : '&language=' + options.language));\n    const result = fetch(endpoint, {\n      method: 'GET'\n    }).then(handleFetchErrors).then(response => response.json()).then(json => {\n      if (typeof json.status_message !== 'undefined') {\n        // Error\n        throw new TypeError(json.status_message);\n      } else if (json.results.length === 0) {\n        // Retry failed search without year\n        if (options.year !== null) {\n          const {\n            year,\n            ...rest\n          } = options;\n          return getMovieId(search, rest);\n        }\n\n        // Error\n        throw new Error(`No TMDB Movie found with that search query, try searching https://www.themoviedb.org/search?query=${encodeURIComponent(search)} to verify one exists`);\n      } else {\n        return json.results[0].id;\n      }\n    }).catch(error => {\n      handleErrors(error);\n      return null;\n    });\n    return result;\n  }\n  function getTrailer(movieId, options) {\n    /* Fetch single or multiple movie trailers via the TMDB API */\n    const endpoint = 'https://api.themoviedb.org' + encodeURI('/3/movie/' + movieId + '/videos?api_key=' + options.apiKey + (options.language === null ? '' : '&language=' + options.language));\n    const result = fetch(endpoint, {\n      method: 'GET'\n    }).then(handleFetchErrors).then(response => response.json()).then(json => {\n      if (typeof json.status_message !== 'undefined') {\n        // Error\n        throw new TypeError(`movie-trailer: ${json.status_message}`);\n      }\n      if (json.results.length === 0) {\n        // Error\n        throw new Error('No trailers found for that TMDB ID');\n      }\n      let {\n        results\n      } = json;\n\n      // Strip all but videoId\n      results = results.map(result => {\n        return result.key;\n      });\n      if (!options.id) {\n        // Return Youtube videoId or full `Watch` URL\n        results = results.map(videoId => toUrl(videoId));\n      }\n      return options.multi ? [...new Set(results)] : results[0];\n    }).catch(error => {\n      handleErrors(error);\n      return null;\n    });\n    return result;\n  }\n  async function movieTrailer(movie, options, cb, legacy) {\n    /* Fetch movie trailers */\n\n    // Massage inputs\n    let config = {\n      multi: false,\n      id: false,\n      year: null,\n      language: null,\n      // Public Key on purpose\n      apiKey: '9d2bff12ed955c7f1f74b83187f188ae'\n    };\n    if (!options) {\n      options = {};\n    }\n    if (typeof movie !== 'string' && !options.tmdbId) {\n      throw new Error('Expected first parameter to be a movie or TMDB ID (string)');\n    } else if (typeof options === 'function') {\n      // Second parameter is the callback\n      cb = options;\n      options = null;\n    } else if (typeof options === 'boolean' || options === 'true') {\n      // Second parameter is multi\n      config.multi = options;\n    } else if (typeof options === 'string' || typeof options === 'number') {\n      // Second parameter is year\n      config.year = options;\n\n      /* BACKWARDS-COMPATABILITY FOR v1 */\n      if (typeof legacy === 'function' && (typeof cb === 'boolean' || typeof cb === 'string' && cb === 'true')) {\n        // Third parameter is multi\n        config.multi = cb;\n        cb = legacy;\n      }\n      /* END BACKWARDS-COMPATABILITY */\n    } else if (typeof options === 'object') {\n      // Set options\n      config = Object.assign(config, options);\n    }\n\n    // Remove invalid callback\n    if (typeof cb !== 'function') {\n      cb = null;\n    }\n    const movieId = config.tmdbId ? config.tmdbId : await getMovieId(movie, config).catch(error => {\n      handleErrors(error);\n      return null;\n    });\n\n    // Get the TMDB content ID\n    if (!movieId) {\n      // Failed\n      return null;\n    }\n\n    // Get the trailers themselves\n    const result = getTrailer(movieId, config);\n    if (!result) {\n      // Failed\n      return null;\n    }\n\n    // Call callback if supplied\n    if (cb) {\n      return result.then(response => cb(null, response)).catch(error => cb(error, null));\n    }\n\n    // Return promise\n    return result;\n  }\n\n  // Exposed public method\n  return movieTrailer;\n});","map":{"version":3,"names":["root","cx","define","amd","exports","module","require","movieTrailer","fetch","handleErrors","error","message","console","warn","handleFetchErrors","response","ok","Error","statusText","toUrl","videoId","encodeURI","getMovieId","search","options","endpoint","apiKey","year","language","result","method","then","json","status_message","TypeError","results","length","rest","encodeURIComponent","id","catch","getTrailer","movieId","map","key","multi","Set","movie","cb","legacy","config","tmdbId","Object","assign"],"sources":["C:/Users/Vivek/OneDrive/Documents/React JS Tutorial/Project_01-Netflix/netflix-clone02/node_modules/movie-trailer/index.js"],"sourcesContent":["/* eslint-disable promise/prefer-await-to-then */\n/* global define */\n'use strict';\n\n( function ( root, cx ) {\n\n\tif ( typeof define === 'function' && define.amd ) {\n\n\t\t// AMD\n\t\tdefine( [ 'isomorphic-fetch' ], cx )\n\n\t} else if ( typeof exports === 'object' ) {\n\n\t\t// Node, CommonJS-like\n\t\tmodule.exports = cx( require( 'isomorphic-fetch' ) )\n\n\t} else {\n\n\t\t// Browser globals (root is window)\n\t\troot.movieTrailer = cx( root.fetch )\n\n\t}\n\n} )( this, fetch => {\n\n\tfunction handleErrors( error ) {\n\n\t\tconst message = ( error && error.message ) ? error.message : error\n\t\tconsole.warn( `movie-trailer: ${message}` )\n\t\t// Throw Error( error.message )\n\n\t}\n\n\tfunction handleFetchErrors( response ) {\n\n\t\tif ( !response.ok ) {\n\n\t\t\tthrow new Error( response.statusText )\n\n\t\t}\n\n\t\treturn response\n\n\t}\n\n\tfunction toUrl( videoId ) {\n\n\t\treturn encodeURI( 'https://www.youtube.com/watch?v=' + videoId )\n\n\t}\n\n\tfunction getMovieId( search, options ) {\n\n\t\t/* Fetch a Movie ID for querying the TMDB API */\n\n\t\tconst endpoint = 'https://api.themoviedb.org' + encodeURI( '/3/search/movie?api_key=' + options.apiKey + '&query=' + search + ( ( options.year === null ) ? '' : '&year=' + options.year ) + ( ( options.language === null ) ? '' : '&language=' + options.language ) )\n\t\tconst result = fetch( endpoint, {\n\t\t\tmethod: 'GET'\n\t\t} )\n\t\t\t.then( handleFetchErrors )\n\t\t\t.then( response => response.json() )\n\t\t\t.then( json => {\n\n\t\t\t\tif ( typeof json.status_message !== 'undefined' ) {\n\n\t\t\t\t\t// Error\n\t\t\t\t\tthrow new TypeError( json.status_message )\n\n\t\t\t\t} else if ( json.results.length === 0 ) {\n\n\t\t\t\t\t// Retry failed search without year\n\t\t\t\t\tif ( options.year !== null ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst { year, ...rest } = options\n\t\t\t\t\t\treturn getMovieId( search, rest);\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Error\n\t\t\t\t\tthrow new Error( `No TMDB Movie found with that search query, try searching https://www.themoviedb.org/search?query=${encodeURIComponent( search )} to verify one exists` )\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn json.results[0].id\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( error => {\n\n\t\t\t\thandleErrors( error )\n\n\t\t\t\treturn null\n\n\t\t\t} )\n\n\t\treturn result\n\n\t}\n\n\tfunction getTrailer( movieId, options ) {\n\n\t\t/* Fetch single or multiple movie trailers via the TMDB API */\n\t\tconst endpoint = 'https://api.themoviedb.org' + encodeURI( '/3/movie/' + movieId + '/videos?api_key=' + options.apiKey + ( ( options.language === null ) ? '' : '&language=' + options.language ) )\n\t\tconst result = fetch( endpoint, {\n\t\t\tmethod: 'GET'\n\t\t} )\n\t\t\t.then( handleFetchErrors )\n\t\t\t.then( response => response.json() )\n\t\t\t.then( json => {\n\n\t\t\t\tif ( typeof ( json.status_message ) !== 'undefined' ) {\n\n\t\t\t\t\t// Error\n\t\t\t\t\tthrow new TypeError( `movie-trailer: ${json.status_message}` )\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.results.length === 0 ) {\n\n\t\t\t\t\t// Error\n\t\t\t\t\tthrow new Error( 'No trailers found for that TMDB ID' )\n\n\t\t\t\t}\n\n\t\t\t\tlet { results } = json\n\n\t\t\t\t// Strip all but videoId\n\t\t\t\tresults = results.map( result => {\n\n\t\t\t\t\treturn result.key\n\n\t\t\t\t} )\n\n\t\t\t\tif ( !options.id ) {\n\n\t\t\t\t\t// Return Youtube videoId or full `Watch` URL\n\t\t\t\t\tresults = results.map( videoId => toUrl( videoId ) )\n\n\t\t\t\t}\n\n\t\t\t\treturn options.multi ? [ ...new Set( results ) ] : results[0]\n\n\t\t\t} )\n\t\t\t.catch( error => {\n\n\t\t\t\thandleErrors( error )\n\n\t\t\t\treturn null\n\n\t\t\t} )\n\n\t\treturn result\n\n\t}\n\n\tasync function movieTrailer( movie, options, cb, legacy ) {\n\n\t\t/* Fetch movie trailers */\n\n\t\t// Massage inputs\n\t\tlet config = {\n\t\t\tmulti: false,\n\t\t\tid: false,\n\t\t\tyear: null,\n\t\t\tlanguage: null,\n\n\t\t\t// Public Key on purpose\n\t\t\tapiKey: '9d2bff12ed955c7f1f74b83187f188ae'\n\t\t}\n\n\t\tif ( !options ) {\n\n\t\t\toptions = {}\n\n\t\t}\n\n\t\tif ( typeof movie !== 'string' && !options.tmdbId ) {\n\n\t\t\tthrow new Error( 'Expected first parameter to be a movie or TMDB ID (string)' )\n\n\t\t} else if ( typeof options === 'function' ) {\n\n\t\t\t// Second parameter is the callback\n\t\t\tcb = options\n\t\t\toptions = null\n\n\t\t} else if ( typeof options === 'boolean' || options === 'true' ) {\n\n\t\t\t// Second parameter is multi\n\t\t\tconfig.multi = options\n\n\t\t} else if ( typeof options === 'string' || typeof options === 'number' ) {\n\n\t\t\t// Second parameter is year\n\t\t\tconfig.year = options\n\n\t\t\t/* BACKWARDS-COMPATABILITY FOR v1 */\n\t\t\tif ( typeof legacy === 'function' && ( typeof cb === 'boolean' || ( typeof cb === 'string' && cb === 'true' ) ) ) {\n\n\t\t\t\t// Third parameter is multi\n\t\t\t\tconfig.multi = cb\n\t\t\t\tcb = legacy\n\n\t\t\t}\n\t\t\t/* END BACKWARDS-COMPATABILITY */\n\n\t\t} else if ( typeof options === 'object' ) {\n\n\t\t\t// Set options\n\t\t\tconfig = Object.assign( config, options )\n\n\t\t}\n\n\t\t// Remove invalid callback\n\t\tif ( typeof cb !== 'function' ) {\n\n\t\t\tcb = null\n\n\t\t}\n\n\t\tconst movieId = config.tmdbId ? config.tmdbId : ( await getMovieId( movie, config )\n\t\t\t.catch( error => {\n\n\t\t\t\thandleErrors( error )\n\n\t\t\t\treturn null\n\n\t\t\t} ) )\n\n\t\t// Get the TMDB content ID\n\t\tif ( !movieId ) {\n\n\t\t\t// Failed\n\t\t\treturn null\n\n\t\t}\n\n\t\t// Get the trailers themselves\n\t\tconst result = getTrailer( movieId, config )\n\n\t\tif ( !result ) {\n\n\t\t\t// Failed\n\t\t\treturn null\n\n\t\t}\n\n\t\t// Call callback if supplied\n\t\tif ( cb ) {\n\n\t\t\treturn result\n\t\t\t\t.then( response => cb( null, response ) )\n\t\t\t\t.catch( error => cb( error, null ) )\n\n\t\t}\n\n\t\t// Return promise\n\t\treturn result\n\n\t}\n\n\t// Exposed public method\n\treturn movieTrailer\n\n} )\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}