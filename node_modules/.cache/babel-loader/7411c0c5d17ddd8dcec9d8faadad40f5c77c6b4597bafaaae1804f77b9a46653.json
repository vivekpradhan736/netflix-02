{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Vivek/OneDrive/Documents/React JS Tutorial/Project_01-Netflix/netflix-clone02/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/Vivek/OneDrive/Documents/React JS Tutorial/Project_01-Netflix/netflix-clone02/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Vivek/OneDrive/Documents/React JS Tutorial/Project_01-Netflix/netflix-clone02/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"C:/Users/Vivek/OneDrive/Documents/React JS Tutorial/Project_01-Netflix/netflix-clone02/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, getUA, isReactNative, isNode, isIndexedDBAvailable, isIE, FirebaseError } from '@firebase/util';\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.3.3\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\nfunction _getCurrentScheme() {\n  var _a;\n  return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\n}\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\nfunction _isHttpOrHttps() {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\nfunction _isAndroidOrIosCordovaScheme() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return !!((_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:' || _getCurrentScheme() === 'capacitor:') && ua.toLowerCase().match(/iphone|ipad|ipod|android/));\n}\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\nfunction _isNativeEnvironment() {\n  return isReactNative() || isNode();\n}\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\nfunction _isIe11() {\n  return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\n}\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\nfunction _isEdge() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /Edge\\/\\d+/.test(ua);\n}\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\nfunction _isLocalStorageNotSynchronized() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return _isIe11() || _isEdge(ua);\n}\n/** @return {boolean} Whether web storage is supported. */\nfunction _isWebStorageSupported() {\n  try {\n    var storage = self.localStorage;\n    var key = exp._generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n  return false;\n}\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\nfunction _isWorker() {\n  // WorkerGlobalScope only defined in worker environment.\n  return typeof global !== 'undefined' && 'WorkerGlobalScope' in global && 'importScripts' in global;\n}\nfunction _isPopupRedirectSupported() {\n  return (_isHttpOrHttps() || isBrowserExtension() || _isAndroidOrIosCordovaScheme()) &&\n  // React Native with remote debugging reports its location.protocol as\n  // http.\n  !_isNativeEnvironment() &&\n  // Local storage has to be supported for browser popup and redirect\n  // operations to work.\n  _isWebStorageSupported() &&\n  // DOM, popups and redirects are not supported within a worker.\n  !_isWorker();\n}\n/** Quick check that indicates the platform *may* be Cordova */\nfunction _isLikelyCordova() {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\nfunction _isCordova() {\n  return _isCordova2.apply(this, arguments);\n}\nfunction _isCordova2() {\n  _isCordova2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          if (_isLikelyCordova()) {\n            _context17.next = 2;\n            break;\n          }\n          return _context17.abrupt(\"return\", false);\n        case 2:\n          return _context17.abrupt(\"return\", new Promise(function (resolve) {\n            var timeoutId = setTimeout(function () {\n              // We've waited long enough; the telltale Cordova event didn't happen\n              resolve(false);\n            }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n            document.addEventListener('deviceready', function () {\n              clearTimeout(timeoutId);\n              resolve(true);\n            });\n          }));\n        case 3:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return _isCordova2.apply(this, arguments);\n}\nfunction _getSelfWindow() {\n  return typeof window !== 'undefined' ? window : null;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\nvar _assert$3 = exp._assert;\nvar PERSISTENCE_KEY = 'persistence';\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\nfunction _validatePersistenceArgument(auth, persistence) {\n  _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* exp.AuthErrorCode.INVALID_PERSISTENCE */);\n  // Validate if the specified type is supported in the current environment.\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\n    return;\n  }\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\n    return;\n  }\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert$3(persistence === Persistence.NONE || persistence === Persistence.LOCAL && isIndexedDBAvailable(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\n    return;\n  }\n  // This is restricted by what the browser supports.\n  _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\n}\nfunction _savePersistenceForRedirect(_x) {\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\nfunction _savePersistenceForRedirect2() {\n  _savePersistenceForRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(auth) {\n    var session, key;\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return auth._initializationPromise;\n        case 2:\n          session = getSessionStorageIfAvailable();\n          key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\n          if (session) {\n            session.setItem(key, auth._getPersistence());\n          }\n        case 5:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }));\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\nfunction _getPersistencesFromRedirect(apiKey, appName) {\n  var session = getSessionStorageIfAvailable();\n  if (!session) {\n    return [];\n  }\n  var key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n  var persistence = session.getItem(key);\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n    default:\n      return [];\n  }\n}\n/** Returns session storage, or null if the property access errors */\nfunction getSessionStorageIfAvailable() {\n  var _a;\n  try {\n    return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _assert$2 = exp._assert;\n/** Platform-agnostic popup-redirect resolver */\nvar CompatPopupRedirectResolver = /*#__PURE__*/function () {\n  function CompatPopupRedirectResolver() {\n    _classCallCheck(this, CompatPopupRedirectResolver);\n    // Create both resolvers for dynamic resolution later\n    this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\n    this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\n    // The actual resolver in use: either browserResolver or cordovaResolver.\n    this.underlyingResolver = null;\n    this._redirectPersistence = exp.browserSessionPersistence;\n    this._completeRedirectFn = exp._getRedirectResult;\n    this._overrideRedirectResult = exp._overrideRedirectResult;\n  }\n  _createClass(CompatPopupRedirectResolver, [{\n    key: \"_initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(auth) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.selectUnderlyingResolver();\n            case 2:\n              return _context.abrupt(\"return\", this.assertedUnderlyingResolver._initialize(auth));\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _initialize(_x2) {\n        return _initialize2.apply(this, arguments);\n      }\n      return _initialize;\n    }()\n  }, {\n    key: \"_openPopup\",\n    value: function () {\n      var _openPopup2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(auth, provider, authType, eventId) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.selectUnderlyingResolver();\n            case 2:\n              return _context2.abrupt(\"return\", this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId));\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function _openPopup(_x3, _x4, _x5, _x6) {\n        return _openPopup2.apply(this, arguments);\n      }\n      return _openPopup;\n    }()\n  }, {\n    key: \"_openRedirect\",\n    value: function () {\n      var _openRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(auth, provider, authType, eventId) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.selectUnderlyingResolver();\n            case 2:\n              return _context3.abrupt(\"return\", this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId));\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _openRedirect(_x7, _x8, _x9, _x10) {\n        return _openRedirect2.apply(this, arguments);\n      }\n      return _openRedirect;\n    }()\n  }, {\n    key: \"_isIframeWebStorageSupported\",\n    value: function _isIframeWebStorageSupported(auth, cb) {\n      this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n    }\n  }, {\n    key: \"_originValidation\",\n    value: function _originValidation(auth) {\n      return this.assertedUnderlyingResolver._originValidation(auth);\n    }\n  }, {\n    key: \"_shouldInitProactively\",\n    get: function get() {\n      return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n    }\n  }, {\n    key: \"assertedUnderlyingResolver\",\n    get: function get() {\n      _assert$2(this.underlyingResolver, \"internal-error\" /* exp.AuthErrorCode.INTERNAL_ERROR */);\n      return this.underlyingResolver;\n    }\n  }, {\n    key: \"selectUnderlyingResolver\",\n    value: function () {\n      var _selectUnderlyingResolver = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var isCordova;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!this.underlyingResolver) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              _context4.next = 4;\n              return _isCordova();\n            case 4:\n              isCordova = _context4.sent;\n              this.underlyingResolver = isCordova ? this.cordovaResolver : this.browserResolver;\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function selectUnderlyingResolver() {\n        return _selectUnderlyingResolver.apply(this, arguments);\n      }\n      return selectUnderlyingResolver;\n    }()\n  }]);\n  return CompatPopupRedirectResolver;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction unwrap(object) {\n  return object.unwrap();\n}\nfunction wrapped(object) {\n  return object.wrapped();\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction credentialFromResponse(userCredential) {\n  return credentialFromObject(userCredential);\n}\nfunction attachExtraErrorFields(auth, e) {\n  var _a;\n  // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n  var response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\n  if ((e === null || e === void 0 ? void 0 : e.code) === 'auth/multi-factor-auth-required') {\n    var mfaErr = e;\n    mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\n  } else if (response) {\n    var credential = credentialFromObject(e);\n    var credErr = e;\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\nfunction credentialFromObject(object) {\n  var _ref = object instanceof FirebaseError ? object.customData : object,\n    _tokenResponse = _ref._tokenResponse;\n  if (!_tokenResponse) {\n    return null;\n  }\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n  var providerId = _tokenResponse.providerId;\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n  var provider;\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n    default:\n      var oauthIdToken = _tokenResponse.oauthIdToken,\n        oauthAccessToken = _tokenResponse.oauthAccessToken,\n        oauthTokenSecret = _tokenResponse.oauthTokenSecret,\n        pendingToken = _tokenResponse.pendingToken,\n        nonce = _tokenResponse.nonce;\n      if (!oauthAccessToken && !oauthTokenSecret && !oauthIdToken && !pendingToken) {\n        return null;\n      }\n      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId: providerId,\n            signInMethod: providerId,\n            pendingToken: pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n  return object instanceof FirebaseError ? provider.credentialFromError(object) : provider.credentialFromResult(object);\n}\nfunction convertCredential(auth, credentialPromise) {\n  return credentialPromise.catch(function (e) {\n    if (e instanceof FirebaseError) {\n      attachExtraErrorFields(auth, e);\n    }\n    throw e;\n  }).then(function (credential) {\n    var operationType = credential.operationType;\n    var user = credential.user;\n    return {\n      operationType: operationType,\n      credential: credentialFromResponse(credential),\n      additionalUserInfo: exp.getAdditionalUserInfo(credential),\n      user: User.getOrCreate(user)\n    };\n  });\n}\nfunction convertConfirmationResult(_x11, _x12) {\n  return _convertConfirmationResult.apply(this, arguments);\n}\nfunction _convertConfirmationResult() {\n  _convertConfirmationResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(auth, confirmationResultPromise) {\n    var confirmationResultExp;\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return confirmationResultPromise;\n        case 2:\n          confirmationResultExp = _context19.sent;\n          return _context19.abrupt(\"return\", {\n            verificationId: confirmationResultExp.verificationId,\n            confirm: function confirm(verificationCode) {\n              return convertCredential(auth, confirmationResultExp.confirm(verificationCode));\n            }\n          });\n        case 4:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return _convertConfirmationResult.apply(this, arguments);\n}\nvar MultiFactorResolver = /*#__PURE__*/function () {\n  function MultiFactorResolver(auth, resolver) {\n    _classCallCheck(this, MultiFactorResolver);\n    this.resolver = resolver;\n    this.auth = wrapped(auth);\n  }\n  _createClass(MultiFactorResolver, [{\n    key: \"session\",\n    get: function get() {\n      return this.resolver.session;\n    }\n  }, {\n    key: \"hints\",\n    get: function get() {\n      return this.resolver.hints;\n    }\n  }, {\n    key: \"resolveSignIn\",\n    value: function resolveSignIn(assertion) {\n      return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\n    }\n  }]);\n  return MultiFactorResolver;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar User = /*#__PURE__*/function () {\n  function User(_delegate) {\n    _classCallCheck(this, User);\n    this._delegate = _delegate;\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n  _createClass(User, [{\n    key: \"delete\",\n    value: function _delete() {\n      return this._delegate.delete();\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      return this._delegate.reload();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this._delegate.toJSON();\n    }\n  }, {\n    key: \"getIdTokenResult\",\n    value: function getIdTokenResult(forceRefresh) {\n      return this._delegate.getIdTokenResult(forceRefresh);\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken(forceRefresh) {\n      return this._delegate.getIdToken(forceRefresh);\n    }\n  }, {\n    key: \"linkAndRetrieveDataWithCredential\",\n    value: function linkAndRetrieveDataWithCredential(credential) {\n      return this.linkWithCredential(credential);\n    }\n  }, {\n    key: \"linkWithCredential\",\n    value: function () {\n      var _linkWithCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(credential) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential)));\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function linkWithCredential(_x13) {\n        return _linkWithCredential.apply(this, arguments);\n      }\n      return linkWithCredential;\n    }()\n  }, {\n    key: \"linkWithPhoneNumber\",\n    value: function () {\n      var _linkWithPhoneNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(phoneNumber, applicationVerifier) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)));\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function linkWithPhoneNumber(_x14, _x15) {\n        return _linkWithPhoneNumber.apply(this, arguments);\n      }\n      return linkWithPhoneNumber;\n    }()\n  }, {\n    key: \"linkWithPopup\",\n    value: function () {\n      var _linkWithPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(provider) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver)));\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function linkWithPopup(_x16) {\n        return _linkWithPopup.apply(this, arguments);\n      }\n      return linkWithPopup;\n    }()\n  }, {\n    key: \"linkWithRedirect\",\n    value: function () {\n      var _linkWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(provider) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _savePersistenceForRedirect(exp._castAuth(this.auth));\n            case 2:\n              return _context8.abrupt(\"return\", exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function linkWithRedirect(_x17) {\n        return _linkWithRedirect.apply(this, arguments);\n      }\n      return linkWithRedirect;\n    }()\n  }, {\n    key: \"reauthenticateAndRetrieveDataWithCredential\",\n    value: function reauthenticateAndRetrieveDataWithCredential(credential) {\n      return this.reauthenticateWithCredential(credential);\n    }\n  }, {\n    key: \"reauthenticateWithCredential\",\n    value: function () {\n      var _reauthenticateWithCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(credential) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential)));\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function reauthenticateWithCredential(_x18) {\n        return _reauthenticateWithCredential.apply(this, arguments);\n      }\n      return reauthenticateWithCredential;\n    }()\n  }, {\n    key: \"reauthenticateWithPhoneNumber\",\n    value: function reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\n      return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n    }\n  }, {\n    key: \"reauthenticateWithPopup\",\n    value: function reauthenticateWithPopup(provider) {\n      return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\n    }\n  }, {\n    key: \"reauthenticateWithRedirect\",\n    value: function () {\n      var _reauthenticateWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(provider) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _savePersistenceForRedirect(exp._castAuth(this.auth));\n            case 2:\n              return _context10.abrupt(\"return\", exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function reauthenticateWithRedirect(_x19) {\n        return _reauthenticateWithRedirect.apply(this, arguments);\n      }\n      return reauthenticateWithRedirect;\n    }()\n  }, {\n    key: \"sendEmailVerification\",\n    value: function sendEmailVerification(actionCodeSettings) {\n      return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n    }\n  }, {\n    key: \"unlink\",\n    value: function () {\n      var _unlink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(providerId) {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return exp.unlink(this._delegate, providerId);\n            case 2:\n              return _context11.abrupt(\"return\", this);\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function unlink(_x20) {\n        return _unlink.apply(this, arguments);\n      }\n      return unlink;\n    }()\n  }, {\n    key: \"updateEmail\",\n    value: function updateEmail(newEmail) {\n      return exp.updateEmail(this._delegate, newEmail);\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(newPassword) {\n      return exp.updatePassword(this._delegate, newPassword);\n    }\n  }, {\n    key: \"updatePhoneNumber\",\n    value: function updatePhoneNumber(phoneCredential) {\n      return exp.updatePhoneNumber(this._delegate, phoneCredential);\n    }\n  }, {\n    key: \"updateProfile\",\n    value: function updateProfile(profile) {\n      return exp.updateProfile(this._delegate, profile);\n    }\n  }, {\n    key: \"verifyBeforeUpdateEmail\",\n    value: function verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\n      return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\n    }\n  }, {\n    key: \"emailVerified\",\n    get: function get() {\n      return this._delegate.emailVerified;\n    }\n  }, {\n    key: \"isAnonymous\",\n    get: function get() {\n      return this._delegate.isAnonymous;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._delegate.metadata;\n    }\n  }, {\n    key: \"phoneNumber\",\n    get: function get() {\n      return this._delegate.phoneNumber;\n    }\n  }, {\n    key: \"providerData\",\n    get: function get() {\n      return this._delegate.providerData;\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this._delegate.refreshToken;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._delegate.tenantId;\n    }\n  }, {\n    key: \"displayName\",\n    get: function get() {\n      return this._delegate.displayName;\n    }\n  }, {\n    key: \"email\",\n    get: function get() {\n      return this._delegate.email;\n    }\n  }, {\n    key: \"photoURL\",\n    get: function get() {\n      return this._delegate.photoURL;\n    }\n  }, {\n    key: \"providerId\",\n    get: function get() {\n      return this._delegate.providerId;\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return this._delegate.uid;\n    }\n  }, {\n    key: \"auth\",\n    get: function get() {\n      return this._delegate.auth;\n    }\n  }], [{\n    key: \"getOrCreate\",\n    value: function getOrCreate(user) {\n      if (!User.USER_MAP.has(user)) {\n        User.USER_MAP.set(user, new User(user));\n      }\n      return User.USER_MAP.get(user);\n    }\n  }]);\n  return User;\n}(); // Maintain a map so that there's always a 1:1 mapping between new User and\n// legacy compat users\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _assert$1 = exp._assert;\nvar Auth = /*#__PURE__*/function () {\n  function Auth(app, provider) {\n    _classCallCheck(this, Auth);\n    this.app = app;\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate();\n      this.linkUnderlyingAuth();\n      return;\n    }\n    var apiKey = app.options.apiKey;\n    // TODO: platform needs to be determined using heuristics\n    _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\n      appName: app.name\n    });\n    // TODO: platform needs to be determined using heuristics\n    _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\n      appName: app.name\n    });\n    // Only use a popup/redirect resolver in browser environments\n    var resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    });\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n    this.linkUnderlyingAuth();\n  }\n  _createClass(Auth, [{\n    key: \"emulatorConfig\",\n    get: function get() {\n      return this._delegate.emulatorConfig;\n    }\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      if (!this._delegate.currentUser) {\n        return null;\n      }\n      return User.getOrCreate(this._delegate.currentUser);\n    }\n  }, {\n    key: \"languageCode\",\n    get: function get() {\n      return this._delegate.languageCode;\n    },\n    set: function set(languageCode) {\n      this._delegate.languageCode = languageCode;\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._delegate.settings;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._delegate.tenantId;\n    },\n    set: function set(tid) {\n      this._delegate.tenantId = tid;\n    }\n  }, {\n    key: \"useDeviceLanguage\",\n    value: function useDeviceLanguage() {\n      this._delegate.useDeviceLanguage();\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      return this._delegate.signOut();\n    }\n  }, {\n    key: \"useEmulator\",\n    value: function useEmulator(url, options) {\n      exp.connectAuthEmulator(this._delegate, url, options);\n    }\n  }, {\n    key: \"applyActionCode\",\n    value: function applyActionCode(code) {\n      return exp.applyActionCode(this._delegate, code);\n    }\n  }, {\n    key: \"checkActionCode\",\n    value: function checkActionCode(code) {\n      return exp.checkActionCode(this._delegate, code);\n    }\n  }, {\n    key: \"confirmPasswordReset\",\n    value: function confirmPasswordReset(code, newPassword) {\n      return exp.confirmPasswordReset(this._delegate, code, newPassword);\n    }\n  }, {\n    key: \"createUserWithEmailAndPassword\",\n    value: function () {\n      var _createUserWithEmailAndPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(email, password) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              return _context12.abrupt(\"return\", convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password)));\n            case 1:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function createUserWithEmailAndPassword(_x21, _x22) {\n        return _createUserWithEmailAndPassword.apply(this, arguments);\n      }\n      return createUserWithEmailAndPassword;\n    }()\n  }, {\n    key: \"fetchProvidersForEmail\",\n    value: function fetchProvidersForEmail(email) {\n      return this.fetchSignInMethodsForEmail(email);\n    }\n  }, {\n    key: \"fetchSignInMethodsForEmail\",\n    value: function fetchSignInMethodsForEmail(email) {\n      return exp.fetchSignInMethodsForEmail(this._delegate, email);\n    }\n  }, {\n    key: \"isSignInWithEmailLink\",\n    value: function isSignInWithEmailLink(emailLink) {\n      return exp.isSignInWithEmailLink(this._delegate, emailLink);\n    }\n  }, {\n    key: \"getRedirectResult\",\n    value: function () {\n      var _getRedirectResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var credential;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n              _context13.next = 3;\n              return exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\n            case 3:\n              credential = _context13.sent;\n              if (credential) {\n                _context13.next = 6;\n                break;\n              }\n              return _context13.abrupt(\"return\", {\n                credential: null,\n                user: null\n              });\n            case 6:\n              return _context13.abrupt(\"return\", convertCredential(this._delegate, Promise.resolve(credential)));\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function getRedirectResult() {\n        return _getRedirectResult.apply(this, arguments);\n      }\n      return getRedirectResult;\n    }() // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n    // out of autogenerated documentation pages to reduce accidental misuse.\n  }, {\n    key: \"addFrameworkForLogging\",\n    value: function addFrameworkForLogging(framework) {\n      exp.addFrameworkForLogging(this._delegate, framework);\n    }\n  }, {\n    key: \"onAuthStateChanged\",\n    value: function onAuthStateChanged(nextOrObserver, errorFn, completed) {\n      var _wrapObservers = wrapObservers(nextOrObserver, errorFn, completed),\n        next = _wrapObservers.next,\n        error = _wrapObservers.error,\n        complete = _wrapObservers.complete;\n      return this._delegate.onAuthStateChanged(next, error, complete);\n    }\n  }, {\n    key: \"onIdTokenChanged\",\n    value: function onIdTokenChanged(nextOrObserver, errorFn, completed) {\n      var _wrapObservers2 = wrapObservers(nextOrObserver, errorFn, completed),\n        next = _wrapObservers2.next,\n        error = _wrapObservers2.error,\n        complete = _wrapObservers2.complete;\n      return this._delegate.onIdTokenChanged(next, error, complete);\n    }\n  }, {\n    key: \"sendSignInLinkToEmail\",\n    value: function sendSignInLinkToEmail(email, actionCodeSettings) {\n      return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n    }\n  }, {\n    key: \"sendPasswordResetEmail\",\n    value: function sendPasswordResetEmail(email, actionCodeSettings) {\n      return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\n    }\n  }, {\n    key: \"setPersistence\",\n    value: function () {\n      var _setPersistence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(persistence) {\n        var converted, isIndexedDBFullySupported;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              _validatePersistenceArgument(this._delegate, persistence);\n              _context14.t0 = persistence;\n              _context14.next = _context14.t0 === Persistence.SESSION ? 4 : _context14.t0 === Persistence.LOCAL ? 6 : _context14.t0 === Persistence.NONE ? 11 : 13;\n              break;\n            case 4:\n              converted = exp.browserSessionPersistence;\n              return _context14.abrupt(\"break\", 14);\n            case 6:\n              _context14.next = 8;\n              return exp._getInstance(exp.indexedDBLocalPersistence)._isAvailable();\n            case 8:\n              isIndexedDBFullySupported = _context14.sent;\n              converted = isIndexedDBFullySupported ? exp.indexedDBLocalPersistence : exp.browserLocalPersistence;\n              return _context14.abrupt(\"break\", 14);\n            case 11:\n              converted = exp.inMemoryPersistence;\n              return _context14.abrupt(\"break\", 14);\n            case 13:\n              return _context14.abrupt(\"return\", exp._fail(\"argument-error\" /* exp.AuthErrorCode.ARGUMENT_ERROR */, {\n                appName: this._delegate.name\n              }));\n            case 14:\n              return _context14.abrupt(\"return\", this._delegate.setPersistence(converted));\n            case 15:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function setPersistence(_x23) {\n        return _setPersistence.apply(this, arguments);\n      }\n      return setPersistence;\n    }()\n  }, {\n    key: \"signInAndRetrieveDataWithCredential\",\n    value: function signInAndRetrieveDataWithCredential(credential) {\n      return this.signInWithCredential(credential);\n    }\n  }, {\n    key: \"signInAnonymously\",\n    value: function signInAnonymously() {\n      return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\n    }\n  }, {\n    key: \"signInWithCredential\",\n    value: function signInWithCredential(credential) {\n      return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\n    }\n  }, {\n    key: \"signInWithCustomToken\",\n    value: function signInWithCustomToken(token) {\n      return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\n    }\n  }, {\n    key: \"signInWithEmailAndPassword\",\n    value: function signInWithEmailAndPassword(email, password) {\n      return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\n    }\n  }, {\n    key: \"signInWithEmailLink\",\n    value: function signInWithEmailLink(email, emailLink) {\n      return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\n    }\n  }, {\n    key: \"signInWithPhoneNumber\",\n    value: function signInWithPhoneNumber(phoneNumber, applicationVerifier) {\n      return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n    }\n  }, {\n    key: \"signInWithPopup\",\n    value: function () {\n      var _signInWithPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(provider) {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n              return _context15.abrupt(\"return\", convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver)));\n            case 2:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function signInWithPopup(_x24) {\n        return _signInWithPopup.apply(this, arguments);\n      }\n      return signInWithPopup;\n    }()\n  }, {\n    key: \"signInWithRedirect\",\n    value: function () {\n      var _signInWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(provider) {\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n              _context16.next = 3;\n              return _savePersistenceForRedirect(this._delegate);\n            case 3:\n              return _context16.abrupt(\"return\", exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n            case 4:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function signInWithRedirect(_x25) {\n        return _signInWithRedirect.apply(this, arguments);\n      }\n      return signInWithRedirect;\n    }()\n  }, {\n    key: \"updateCurrentUser\",\n    value: function updateCurrentUser(user) {\n      // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n      // @ts-ignore\n      return this._delegate.updateCurrentUser(user);\n    }\n  }, {\n    key: \"verifyPasswordResetCode\",\n    value: function verifyPasswordResetCode(code) {\n      return exp.verifyPasswordResetCode(this._delegate, code);\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this._delegate;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._delegate._delete();\n    }\n  }, {\n    key: \"linkUnderlyingAuth\",\n    value: function linkUnderlyingAuth() {\n      var _this = this;\n      this._delegate.wrapped = function () {\n        return _this;\n      };\n    }\n  }]);\n  return Auth;\n}();\nAuth.Persistence = Persistence;\nfunction wrapObservers(nextOrObserver, error, complete) {\n  var next = nextOrObserver;\n  if (typeof nextOrObserver !== 'function') {\n    next = nextOrObserver.next;\n    error = nextOrObserver.error;\n    complete = nextOrObserver.complete;\n  }\n  // We know 'next' is now a function\n  var oldNext = next;\n  var newNext = function newNext(user) {\n    return oldNext(user && User.getOrCreate(user));\n  };\n  return {\n    next: newNext,\n    error: error,\n    complete: complete\n  };\n}\nfunction buildPersistenceHierarchy(apiKey, appName) {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  var persistences = _getPersistencesFromRedirect(apiKey, appName);\n  // If \"self\" is available, add indexedDB\n  if (typeof self !== 'undefined' && !persistences.includes(exp.indexedDBLocalPersistence)) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  }\n  // If \"window\" is available, add HTML Storage persistences\n  if (typeof window !== 'undefined') {\n    for (var _i = 0, _arr = [exp.browserLocalPersistence, exp.browserSessionPersistence]; _i < _arr.length; _i++) {\n      var persistence = _arr[_i];\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  }\n  // Add in-memory as a final fallback\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n  return persistences;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PhoneAuthProvider = /*#__PURE__*/function () {\n  function PhoneAuthProvider() {\n    _classCallCheck(this, PhoneAuthProvider);\n    this.providerId = 'phone';\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\n  }\n  _createClass(PhoneAuthProvider, [{\n    key: \"verifyPhoneNumber\",\n    value: function verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\n      return this._delegate.verifyPhoneNumber(\n      // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions, applicationVerifier);\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this._delegate;\n    }\n  }], [{\n    key: \"credential\",\n    value: function credential(verificationId, verificationCode) {\n      return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n    }\n  }]);\n  return PhoneAuthProvider;\n}();\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _assert = exp._assert;\nvar RecaptchaVerifier = /*#__PURE__*/function () {\n  function RecaptchaVerifier(container, parameters) {\n    var app = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : firebase.app();\n    _classCallCheck(this, RecaptchaVerifier);\n    var _a;\n    // API key is required for web client RPC calls.\n    _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\n      appName: app.name\n    });\n    this._delegate = new exp.RecaptchaVerifier(container,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parameters,\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    app.auth());\n    this.type = this._delegate.type;\n  }\n  _createClass(RecaptchaVerifier, [{\n    key: \"clear\",\n    value: function clear() {\n      this._delegate.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this._delegate.render();\n    }\n  }, {\n    key: \"verify\",\n    value: function verify() {\n      return this._delegate.verify();\n    }\n  }]);\n  return RecaptchaVerifier;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar AUTH_TYPE = 'auth-compat';\n// Create auth components to register with firebase.\n// Provides Auth public APIs.\nfunction registerAuthCompat(instance) {\n  instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, function (container) {\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app-compat').getImmediate();\n    var authProvider = container.getProvider('auth');\n    return new Auth(app, authProvider);\n  }, \"PUBLIC\" /* ComponentType.PUBLIC */).setServiceProps({\n    ActionCodeInfo: {\n      Operation: {\n        EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\n        PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\n        RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\n        REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n        VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n        VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\n      }\n    },\n    EmailAuthProvider: exp.EmailAuthProvider,\n    FacebookAuthProvider: exp.FacebookAuthProvider,\n    GithubAuthProvider: exp.GithubAuthProvider,\n    GoogleAuthProvider: exp.GoogleAuthProvider,\n    OAuthProvider: exp.OAuthProvider,\n    SAMLAuthProvider: exp.SAMLAuthProvider,\n    PhoneAuthProvider: PhoneAuthProvider,\n    PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\n    RecaptchaVerifier: RecaptchaVerifier,\n    TwitterAuthProvider: exp.TwitterAuthProvider,\n    Auth: Auth,\n    AuthCredential: exp.AuthCredential,\n    Error: FirebaseError\n  }).setInstantiationMode(\"LAZY\" /* InstantiationMode.LAZY */).setMultipleInstances(false));\n  instance.registerVersion(name, version);\n}\nregisterAuthCompat(firebase);","map":{"version":3,"mappings":"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","names":["CORDOVA_ONDEVICEREADY_TIMEOUT_MS","_getCurrentScheme","self","location","protocol","_isHttpOrHttps","ua","getUA","toLowerCase","match","_isNativeEnvironment","isReactNative","isNode","_isIe11","isIE","document","documentMode","_isEdge","test","_isLocalStorageNotSynchronized","_isWebStorageSupported","storage","localStorage","key","impl","_generateEventId","isIndexedDBAvailable","e","_isWorker","global","_isPopupRedirectSupported","isBrowserExtension","_isAndroidOrIosCordovaScheme","_isLikelyCordova","_isCordova","Promise","timeoutId","setTimeout","resolve","addEventListener","clearTimeout","_getSelfWindow","window","Persistence","LOCAL","NONE","SESSION","_assert","exp","PERSISTENCE_KEY","auth","persistence","Object","values","includes","_savePersistenceForRedirect","_initializationPromise","session","getSessionStorageIfAvailable","_persistenceKeyName","config","apiKey","name","setItem","_getPersistence","appName","getItem","inMemoryPersistence","indexedDBLocalPersistence","browserSessionPersistence","sessionStorage","CompatPopupRedirectResolver","_getInstance","browserPopupRedirectResolver","cordovaPopupRedirectResolver","_getRedirectResult","_overrideRedirectResult","selectUnderlyingResolver","assertedUnderlyingResolver","_initialize","provider","authType","eventId","_openPopup","_openRedirect","cb","_isIframeWebStorageSupported","_originValidation","browserResolver","_shouldInitProactively","underlyingResolver","isCordova","cordovaResolver","unwrap","object","wrapped","credentialFromResponse","userCredential","credentialFromObject","attachExtraErrorFields","response","_a","customData","_tokenResponse","code","mfaErr","resolver","MultiFactorResolver","getMultiFactorResolver","credential","credErr","tenantId","undefined","email","phoneNumber","FirebaseError","PhoneAuthProvider","credentialFromResult","providerId","ProviderId","PASSWORD","GOOGLE","GoogleAuthProvider","FACEBOOK","FacebookAuthProvider","GITHUB","GithubAuthProvider","TWITTER","TwitterAuthProvider","oauthIdToken","oauthAccessToken","oauthTokenSecret","pendingToken","nonce","startsWith","SAMLAuthCredential","_create","OAuthCredential","_fromParams","signInMethod","idToken","accessToken","OAuthProvider","rawNonce","credentialFromError","credentialPromise","catch","then","operationType","user","additionalUserInfo","getAdditionalUserInfo","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","verificationId","confirm","verificationCode","convertCredential","hints","assertion","resolveSignIn","_delegate","multiFactor","delete","reload","toJSON","forceRefresh","getIdTokenResult","getIdToken","linkWithCredential","applicationVerifier","linkWithPhoneNumber","linkWithPopup","_castAuth","linkWithRedirect","reauthenticateWithCredential","reauthenticateWithPhoneNumber","reauthenticateWithPopup","reauthenticateWithRedirect","actionCodeSettings","sendEmailVerification","unlink","newEmail","updateEmail","newPassword","updatePassword","phoneCredential","updatePhoneNumber","profile","updateProfile","verifyBeforeUpdateEmail","emailVerified","isAnonymous","metadata","providerData","refreshToken","displayName","photoURL","uid","USER_MAP","has","set","get","WeakMap","Auth","app","isInitialized","getImmediate","linkUnderlyingAuth","options","initialize","buildPersistenceHierarchy","popupRedirectResolver","_updateErrorMap","debugErrorMap","emulatorConfig","currentUser","languageCode","settings","tid","useDeviceLanguage","signOut","url","connectAuthEmulator","applyActionCode","checkActionCode","confirmPasswordReset","password","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","emailLink","isSignInWithEmailLink","getRedirectResult","framework","addFrameworkForLogging","nextOrObserver","errorFn","completed","wrapObservers","next","error","complete","onAuthStateChanged","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","_validatePersistenceArgument","converted","_isAvailable","isIndexedDBFullySupported","browserLocalPersistence","_fail","setPersistence","signInWithCredential","signInAnonymously","token","signInWithCustomToken","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","signInWithPopup","signInWithRedirect","updateCurrentUser","verifyPasswordResetCode","_delete","oldNext","newNext","persistences","_getPersistencesFromRedirect","push","firebase","phoneInfoOptions","verifyPhoneNumber","PHONE_SIGN_IN_METHOD","PROVIDER_ID","RecaptchaVerifier","container","parameters","type","clear","render","verify","AUTH_TYPE","registerAuthCompat","instance","INTERNAL","registerComponent","Component","getProvider","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","ActionCodeOperation","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","EmailAuthProvider","SAMLAuthProvider","CompatAuthProvider","PhoneMultiFactorGenerator","CompatRecaptchaVerifier","AuthCredential","Error","setInstantiationMode","setMultipleInstances","registerVersion","version"],"sources":["C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\src\\platform.ts","C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\src\\persistence.ts","C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\src\\popup_redirect.ts","C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\src\\wrap.ts","C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\src\\user_credential.ts","C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\src\\user.ts","C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\src\\auth.ts","C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\src\\phone_auth_provider.ts","C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\src\\recaptcha_verifier.ts","C:\\Users\\Vivek\\OneDrive\\Documents\\React JS Tutorial\\Project_01-Netflix\\netflix-clone02\\node_modules\\@firebase\\auth-compat\\index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as impl from '@firebase/auth/internal';\nimport {\n  getUA,\n  isBrowserExtension,\n  isReactNative,\n  isNode,\n  isIE,\n  isIndexedDBAvailable\n} from '@firebase/util';\n\ndeclare global {\n  interface Document {\n    documentMode?: number;\n  }\n}\n\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme(): string | null {\n  return self?.location?.protocol || null;\n}\n\n/**\n * @return {boolean} Whether the current environment is http or https.\n */\nfunction _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\n/**\n * @param {?string=} ua The user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\n *     Cordova environment.\n */\nexport function _isAndroidOrIosCordovaScheme(ua: string = getUA()): boolean {\n  return !!(\n    (_getCurrentScheme() === 'file:' ||\n      _getCurrentScheme() === 'ionic:' ||\n      _getCurrentScheme() === 'capacitor:') &&\n    ua.toLowerCase().match(/iphone|ipad|ipod|android/)\n  );\n}\n\n/**\n * @return {boolean} Whether the environment is a native environment, where\n *     CORS checks do not apply.\n */\nfunction _isNativeEnvironment(): boolean {\n  return isReactNative() || isNode();\n}\n\n/**\n * Checks whether the user agent is IE11.\n * @return {boolean} True if it is IE11.\n */\nfunction _isIe11(): boolean {\n  return isIE() && document?.documentMode === 11;\n}\n\n/**\n * Checks whether the user agent is Edge.\n * @param {string} userAgent The browser user agent string.\n * @return {boolean} True if it is Edge.\n */\nfunction _isEdge(ua: string = getUA()): boolean {\n  return /Edge\\/\\d+/.test(ua);\n}\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} Whether local storage is not synchronized between an iframe\n *     and a popup of the same domain.\n */\nfunction _isLocalStorageNotSynchronized(ua: string = getUA()): boolean {\n  return _isIe11() || _isEdge(ua);\n}\n\n/** @return {boolean} Whether web storage is supported. */\nexport function _isWebStorageSupported(): boolean {\n  try {\n    const storage = self.localStorage;\n    const key = impl._generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n  return false;\n}\n\n/**\n * @param {?Object=} global The optional global scope.\n * @return {boolean} Whether current environment is a worker.\n */\nexport function _isWorker(): boolean {\n  // WorkerGlobalScope only defined in worker environment.\n  return (\n    typeof global !== 'undefined' &&\n    'WorkerGlobalScope' in global &&\n    'importScripts' in global\n  );\n}\n\nexport function _isPopupRedirectSupported(): boolean {\n  return (\n    (_isHttpOrHttps() ||\n      isBrowserExtension() ||\n      _isAndroidOrIosCordovaScheme()) &&\n    // React Native with remote debugging reports its location.protocol as\n    // http.\n    !_isNativeEnvironment() &&\n    // Local storage has to be supported for browser popup and redirect\n    // operations to work.\n    _isWebStorageSupported() &&\n    // DOM, popups and redirects are not supported within a worker.\n    !_isWorker()\n  );\n}\n\n/** Quick check that indicates the platform *may* be Cordova */\nexport function _isLikelyCordova(): boolean {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nexport async function _isCordova(): Promise<boolean> {\n  if (!_isLikelyCordova()) {\n    return false;\n  }\n\n  return new Promise(resolve => {\n    const timeoutId = setTimeout(() => {\n      // We've waited long enough; the telltale Cordova event didn't happen\n      resolve(false);\n    }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n\n    document.addEventListener('deviceready', () => {\n      clearTimeout(timeoutId);\n      resolve(true);\n    });\n  });\n}\n\nexport function _getSelfWindow(): Window | null {\n  return typeof window !== 'undefined' ? window : null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { isIndexedDBAvailable, isNode, isReactNative } from '@firebase/util';\nimport { _getSelfWindow, _isWebStorageSupported, _isWorker } from './platform';\n\nexport const Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\n\nconst _assert: typeof exp._assert = exp._assert;\n\nconst PERSISTENCE_KEY = 'persistence';\n\n/**\n * Validates that an argument is a valid persistence value. If an invalid type\n * is specified, an error is thrown synchronously.\n */\nexport function _validatePersistenceArgument(\n  auth: exp.Auth,\n  persistence: string\n): void {\n  _assert(\n    Object.values(Persistence).includes(persistence),\n    auth,\n    exp.AuthErrorCode.INVALID_PERSISTENCE\n  );\n  // Validate if the specified type is supported in the current environment.\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert(\n      persistence !== Persistence.SESSION,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert(\n      persistence === Persistence.NONE,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert(\n      persistence === Persistence.NONE ||\n        (persistence === Persistence.LOCAL && isIndexedDBAvailable()),\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  // This is restricted by what the browser supports.\n  _assert(\n    persistence === Persistence.NONE || _isWebStorageSupported(),\n    auth,\n    exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n  );\n}\n\nexport async function _savePersistenceForRedirect(\n  auth: exp.AuthInternal\n): Promise<void> {\n  await auth._initializationPromise;\n  const session = getSessionStorageIfAvailable();\n  const key = exp._persistenceKeyName(\n    PERSISTENCE_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n  if (session) {\n    session.setItem(key, auth._getPersistence());\n  }\n}\n\nexport function _getPersistencesFromRedirect(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  const session = getSessionStorageIfAvailable();\n  if (!session) {\n    return [];\n  }\n\n  const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n  const persistence = session.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n    default:\n      return [];\n  }\n}\n\n/** Returns session storage, or null if the property access errors */\nfunction getSessionStorageIfAvailable(): Storage | null {\n  try {\n    return _getSelfWindow()?.sessionStorage || null;\n  } catch (e) {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { _isCordova, _isLikelyCordova } from './platform';\n\nconst _assert: typeof exp._assert = exp._assert;\n\n/** Platform-agnostic popup-redirect resolver */\nexport class CompatPopupRedirectResolver\n  implements exp.PopupRedirectResolverInternal\n{\n  // Create both resolvers for dynamic resolution later\n  private readonly browserResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.browserPopupRedirectResolver);\n  private readonly cordovaResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.cordovaPopupRedirectResolver);\n  // The actual resolver in use: either browserResolver or cordovaResolver.\n  private underlyingResolver: exp.PopupRedirectResolverInternal | null = null;\n  _redirectPersistence = exp.browserSessionPersistence;\n\n  _completeRedirectFn: (\n    auth: exp.Auth,\n    resolver: exp.PopupRedirectResolver,\n    bypassAuthState: boolean\n  ) => Promise<exp.UserCredential | null> = exp._getRedirectResult;\n  _overrideRedirectResult = exp._overrideRedirectResult;\n\n  async _initialize(auth: exp.AuthImpl): Promise<exp.EventManager> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._initialize(auth);\n  }\n\n  async _openPopup(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<exp.AuthPopup> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openPopup(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  async _openRedirect(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openRedirect(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  _isIframeWebStorageSupported(\n    auth: exp.AuthImpl,\n    cb: (support: boolean) => unknown\n  ): void {\n    this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n  }\n\n  _originValidation(auth: exp.Auth): Promise<void> {\n    return this.assertedUnderlyingResolver._originValidation(auth);\n  }\n\n  get _shouldInitProactively(): boolean {\n    return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n  }\n\n  private get assertedUnderlyingResolver(): exp.PopupRedirectResolverInternal {\n    _assert(this.underlyingResolver, exp.AuthErrorCode.INTERNAL_ERROR);\n    return this.underlyingResolver;\n  }\n\n  private async selectUnderlyingResolver(): Promise<void> {\n    if (this.underlyingResolver) {\n      return;\n    }\n\n    // We haven't yet determined whether or not we're in Cordova; go ahead\n    // and determine that state now.\n    const isCordova = await _isCordova();\n    this.underlyingResolver = isCordova\n      ? this.cordovaResolver\n      : this.browserResolver;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Forward direction wrapper from Compat --unwrap-> Exp */\nexport interface Wrapper<T> {\n  unwrap(): T;\n}\n\n/** Reverse direction wrapper from Exp --wrapped--> Compat */\nexport interface ReverseWrapper<T> {\n  wrapped(): T;\n}\n\nexport function unwrap<T>(object: unknown): T {\n  return (object as Wrapper<T>).unwrap();\n}\n\nexport function wrapped<T>(object: unknown): T {\n  return (object as ReverseWrapper<T>).wrapped();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { FirebaseError } from '@firebase/util';\nimport { Auth } from './auth';\nimport { User } from './user';\nimport { unwrap, wrapped } from './wrap';\n\nfunction credentialFromResponse(\n  userCredential: exp.UserCredentialInternal\n): exp.AuthCredential | null {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth: exp.Auth, e: FirebaseError): void {\n  // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n  const response = (e.customData as exp.TaggedWithTokenResponse | undefined)\n    ?._tokenResponse as unknown as Record<string, string>;\n  if ((e as FirebaseError)?.code === 'auth/multi-factor-auth-required') {\n    const mfaErr = e as compat.MultiFactorError;\n    mfaErr.resolver = new MultiFactorResolver(\n      auth,\n      exp.getMultiFactorResolver(auth, e as exp.MultiFactorError)\n    );\n  } else if (response) {\n    const credential = credentialFromObject(e);\n    const credErr = e as compat.AuthError;\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(\n  object: FirebaseError | exp.UserCredential\n): exp.AuthCredential | null {\n  const { _tokenResponse } = (\n    object instanceof FirebaseError ? object.customData : object\n  ) as exp.TaggedWithTokenResponse;\n  if (!_tokenResponse) {\n    return null;\n  }\n\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  const providerId = _tokenResponse.providerId;\n\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  let provider: Pick<\n    typeof exp.OAuthProvider,\n    'credentialFromResult' | 'credentialFromError'\n  >;\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n    default:\n      const {\n        oauthIdToken,\n        oauthAccessToken,\n        oauthTokenSecret,\n        pendingToken,\n        nonce\n      } = _tokenResponse as exp.SignInWithIdpResponse;\n      if (\n        !oauthAccessToken &&\n        !oauthTokenSecret &&\n        !oauthIdToken &&\n        !pendingToken\n      ) {\n        return null;\n      }\n      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId,\n            signInMethod: providerId,\n            pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError\n    ? provider.credentialFromError(object)\n    : provider.credentialFromResult(object);\n}\n\nexport function convertCredential(\n  auth: exp.Auth,\n  credentialPromise: Promise<exp.UserCredential>\n): Promise<compat.UserCredential> {\n  return credentialPromise\n    .catch(e => {\n      if (e instanceof FirebaseError) {\n        attachExtraErrorFields(auth, e);\n      }\n      throw e;\n    })\n    .then(credential => {\n      const operationType = credential.operationType;\n      const user = credential.user;\n\n      return {\n        operationType,\n        credential: credentialFromResponse(\n          credential as exp.UserCredentialInternal\n        ),\n        additionalUserInfo: exp.getAdditionalUserInfo(\n          credential as exp.UserCredential\n        ),\n        user: User.getOrCreate(user)\n      };\n    });\n}\n\nexport async function convertConfirmationResult(\n  auth: exp.Auth,\n  confirmationResultPromise: Promise<exp.ConfirmationResult>\n): Promise<compat.ConfirmationResult> {\n  const confirmationResultExp = await confirmationResultPromise;\n  return {\n    verificationId: confirmationResultExp.verificationId,\n    confirm: (verificationCode: string) =>\n      convertCredential(auth, confirmationResultExp.confirm(verificationCode))\n  };\n}\n\nclass MultiFactorResolver implements compat.MultiFactorResolver {\n  readonly auth: Auth;\n  constructor(\n    auth: exp.Auth,\n    private readonly resolver: exp.MultiFactorResolver\n  ) {\n    this.auth = wrapped(auth);\n  }\n\n  get session(): compat.MultiFactorSession {\n    return this.resolver.session;\n  }\n\n  get hints(): compat.MultiFactorInfo[] {\n    return this.resolver.hints;\n  }\n\n  resolveSignIn(\n    assertion: compat.MultiFactorAssertion\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      unwrap(this.auth),\n      this.resolver.resolveSignIn(assertion as exp.MultiFactorAssertion)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\nimport { _savePersistenceForRedirect } from './persistence';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\n\nexport class User implements compat.User, Compat<exp.User> {\n  // Maintain a map so that there's always a 1:1 mapping between new User and\n  // legacy compat users\n  private static readonly USER_MAP = new WeakMap<exp.User, User>();\n\n  readonly multiFactor: compat.MultiFactorUser;\n\n  private constructor(readonly _delegate: exp.User) {\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  static getOrCreate(user: exp.User): User {\n    if (!User.USER_MAP.has(user)) {\n      User.USER_MAP.set(user, new User(user));\n    }\n\n    return User.USER_MAP.get(user)!;\n  }\n\n  delete(): Promise<void> {\n    return this._delegate.delete();\n  }\n  reload(): Promise<void> {\n    return this._delegate.reload();\n  }\n  toJSON(): object {\n    return this._delegate.toJSON();\n  }\n  getIdTokenResult(forceRefresh?: boolean): Promise<compat.IdTokenResult> {\n    return this._delegate.getIdTokenResult(forceRefresh);\n  }\n  getIdToken(forceRefresh?: boolean): Promise<string> {\n    return this._delegate.getIdToken(forceRefresh);\n  }\n  linkAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.linkWithCredential(credential);\n  }\n  async linkWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  async linkWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)\n    );\n  }\n  async linkWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async linkWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.linkWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  reauthenticateAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.reauthenticateWithCredential(credential);\n  }\n  async reauthenticateWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth as unknown as exp.Auth,\n      exp.reauthenticateWithCredential(\n        this._delegate,\n        credential as exp.AuthCredential\n      )\n    );\n  }\n  reauthenticateWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.reauthenticateWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  reauthenticateWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.reauthenticateWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async reauthenticateWithRedirect(\n    provider: compat.AuthProvider\n  ): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.reauthenticateWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  sendEmailVerification(\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n  }\n  async unlink(providerId: string): Promise<compat.User> {\n    await exp.unlink(this._delegate, providerId);\n    return this;\n  }\n  updateEmail(newEmail: string): Promise<void> {\n    return exp.updateEmail(this._delegate, newEmail);\n  }\n  updatePassword(newPassword: string): Promise<void> {\n    return exp.updatePassword(this._delegate, newPassword);\n  }\n  updatePhoneNumber(phoneCredential: compat.AuthCredential): Promise<void> {\n    return exp.updatePhoneNumber(\n      this._delegate,\n      phoneCredential as exp.PhoneAuthCredential\n    );\n  }\n  updateProfile(profile: {\n    displayName?: string | null;\n    photoURL?: string | null;\n  }): Promise<void> {\n    return exp.updateProfile(this._delegate, profile);\n  }\n  verifyBeforeUpdateEmail(\n    newEmail: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.verifyBeforeUpdateEmail(\n      this._delegate,\n      newEmail,\n      actionCodeSettings\n    );\n  }\n  get emailVerified(): boolean {\n    return this._delegate.emailVerified;\n  }\n  get isAnonymous(): boolean {\n    return this._delegate.isAnonymous;\n  }\n  get metadata(): compat.UserMetadata {\n    return this._delegate.metadata;\n  }\n  get phoneNumber(): string | null {\n    return this._delegate.phoneNumber;\n  }\n  get providerData(): Array<compat.UserInfo | null> {\n    return this._delegate.providerData;\n  }\n  get refreshToken(): string {\n    return this._delegate.refreshToken;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  get displayName(): string | null {\n    return this._delegate.displayName;\n  }\n  get email(): string | null {\n    return this._delegate.email;\n  }\n  get photoURL(): string | null {\n    return this._delegate.photoURL;\n  }\n  get providerId(): string {\n    return this._delegate.providerId;\n  }\n  get uid(): string {\n    return this._delegate.uid;\n  }\n  private get auth(): exp.Auth {\n    return (this._delegate as exp.UserImpl).auth as unknown as exp.Auth;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Provider } from '@firebase/component';\nimport { ErrorFn, Observer, Unsubscribe } from '@firebase/util';\n\nimport {\n  _validatePersistenceArgument,\n  Persistence,\n  _getPersistencesFromRedirect,\n  _savePersistenceForRedirect\n} from './persistence';\nimport { _isPopupRedirectSupported } from './platform';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport { User } from './user';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\nimport { ReverseWrapper, Wrapper } from './wrap';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class Auth\n  implements compat.FirebaseAuth, Wrapper<exp.Auth>, _FirebaseService\n{\n  static Persistence = Persistence;\n  readonly _delegate: exp.AuthImpl;\n\n  constructor(readonly app: FirebaseApp, provider: Provider<'auth'>) {\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate() as exp.AuthImpl;\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    const { apiKey } = app.options;\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // Only use a popup/redirect resolver in browser environments\n    const resolver =\n      typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    }) as exp.AuthImpl;\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n    this.linkUnderlyingAuth();\n  }\n\n  get emulatorConfig(): compat.EmulatorConfig | null {\n    return this._delegate.emulatorConfig;\n  }\n\n  get currentUser(): compat.User | null {\n    if (!this._delegate.currentUser) {\n      return null;\n    }\n\n    return User.getOrCreate(this._delegate.currentUser);\n  }\n  get languageCode(): string | null {\n    return this._delegate.languageCode;\n  }\n  set languageCode(languageCode: string | null) {\n    this._delegate.languageCode = languageCode;\n  }\n  get settings(): compat.AuthSettings {\n    return this._delegate.settings;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  set tenantId(tid: string | null) {\n    this._delegate.tenantId = tid;\n  }\n  useDeviceLanguage(): void {\n    this._delegate.useDeviceLanguage();\n  }\n  signOut(): Promise<void> {\n    return this._delegate.signOut();\n  }\n  useEmulator(url: string, options?: { disableWarnings: boolean }): void {\n    exp.connectAuthEmulator(this._delegate, url, options);\n  }\n  applyActionCode(code: string): Promise<void> {\n    return exp.applyActionCode(this._delegate, code);\n  }\n\n  checkActionCode(code: string): Promise<compat.ActionCodeInfo> {\n    return exp.checkActionCode(this._delegate, code);\n  }\n\n  confirmPasswordReset(code: string, newPassword: string): Promise<void> {\n    return exp.confirmPasswordReset(this._delegate, code, newPassword);\n  }\n\n  async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.createUserWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  fetchProvidersForEmail(email: string): Promise<string[]> {\n    return this.fetchSignInMethodsForEmail(email);\n  }\n  fetchSignInMethodsForEmail(email: string): Promise<string[]> {\n    return exp.fetchSignInMethodsForEmail(this._delegate, email);\n  }\n  isSignInWithEmailLink(emailLink: string): boolean {\n    return exp.isSignInWithEmailLink(this._delegate, emailLink);\n  }\n  async getRedirectResult(): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const credential = await exp.getRedirectResult(\n      this._delegate,\n      CompatPopupRedirectResolver\n    );\n    if (!credential) {\n      return {\n        credential: null,\n        user: null\n      };\n    }\n    return convertCredential(this._delegate, Promise.resolve(credential));\n  }\n\n  // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n  // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n  // out of autogenerated documentation pages to reduce accidental misuse.\n  addFrameworkForLogging(framework: string): void {\n    exp.addFrameworkForLogging(this._delegate, framework);\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onAuthStateChanged(next!, error, complete);\n  }\n  onIdTokenChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onIdTokenChanged(next!, error, complete);\n  }\n  sendSignInLinkToEmail(\n    email: string,\n    actionCodeSettings: compat.ActionCodeSettings\n  ): Promise<void> {\n    return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n  }\n  sendPasswordResetEmail(\n    email: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendPasswordResetEmail(\n      this._delegate,\n      email,\n      actionCodeSettings || undefined\n    );\n  }\n  async setPersistence(persistence: string): Promise<void> {\n    _validatePersistenceArgument(this._delegate, persistence);\n    let converted;\n    switch (persistence) {\n      case Persistence.SESSION:\n        converted = exp.browserSessionPersistence;\n        break;\n      case Persistence.LOCAL:\n        // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\n        const isIndexedDBFullySupported = await exp\n          ._getInstance<exp.PersistenceInternal>(exp.indexedDBLocalPersistence)\n          ._isAvailable();\n        converted = isIndexedDBFullySupported\n          ? exp.indexedDBLocalPersistence\n          : exp.browserLocalPersistence;\n        break;\n      case Persistence.NONE:\n        converted = exp.inMemoryPersistence;\n        break;\n      default:\n        return exp._fail(exp.AuthErrorCode.ARGUMENT_ERROR, {\n          appName: this._delegate.name\n        });\n    }\n\n    return this._delegate.setPersistence(converted);\n  }\n\n  signInAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.signInWithCredential(credential);\n  }\n  signInAnonymously(): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInAnonymously(this._delegate)\n    );\n  }\n  signInWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  signInWithCustomToken(token: string): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCustomToken(this._delegate, token)\n    );\n  }\n  signInWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  signInWithEmailLink(\n    email: string,\n    emailLink?: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailLink(this._delegate, email, emailLink)\n    );\n  }\n  signInWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this._delegate,\n      exp.signInWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  async signInWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    return convertCredential(\n      this._delegate,\n      exp.signInWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async signInWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n\n    await _savePersistenceForRedirect(this._delegate);\n    return exp.signInWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  updateCurrentUser(user: compat.User | null): Promise<void> {\n    // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n    // @ts-ignore\n    return this._delegate.updateCurrentUser(user);\n  }\n  verifyPasswordResetCode(code: string): Promise<string> {\n    return exp.verifyPasswordResetCode(this._delegate, code);\n  }\n  unwrap(): exp.Auth {\n    return this._delegate;\n  }\n  _delete(): Promise<void> {\n    return this._delegate._delete();\n  }\n  private linkUnderlyingAuth(): void {\n    (this._delegate as unknown as ReverseWrapper<Auth>).wrapped = () => this;\n  }\n}\n\nfunction wrapObservers(\n  nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n  error?: (error: compat.Error) => unknown,\n  complete?: Unsubscribe\n): Partial<Observer<exp.User | null>> {\n  let next = nextOrObserver;\n  if (typeof nextOrObserver !== 'function') {\n    ({ next, error, complete } = nextOrObserver);\n  }\n\n  // We know 'next' is now a function\n  const oldNext = next as (a: compat.User | null) => unknown;\n\n  const newNext = (user: exp.User | null): unknown =>\n    oldNext(user && User.getOrCreate(user as exp.User));\n  return {\n    next: newNext,\n    error: error as ErrorFn,\n    complete\n  };\n}\n\nfunction buildPersistenceHierarchy(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  const persistences = _getPersistencesFromRedirect(apiKey, appName);\n\n  // If \"self\" is available, add indexedDB\n  if (\n    typeof self !== 'undefined' &&\n    !persistences.includes(exp.indexedDBLocalPersistence)\n  ) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  }\n\n  // If \"window\" is available, add HTML Storage persistences\n  if (typeof window !== 'undefined') {\n    for (const persistence of [\n      exp.browserLocalPersistence,\n      exp.browserSessionPersistence\n    ]) {\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  }\n\n  // Add in-memory as a final fallback\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n\n  return persistences;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport firebase from '@firebase/app-compat';\nimport { Compat } from '@firebase/util';\nimport { unwrap } from './wrap';\n\nexport class PhoneAuthProvider\n  implements compat.PhoneAuthProvider, Compat<exp.PhoneAuthProvider>\n{\n  providerId = 'phone';\n  readonly _delegate: exp.PhoneAuthProvider;\n\n  static PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\n  static PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): compat.AuthCredential {\n    return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n  }\n\n  constructor() {\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth!()));\n  }\n\n  verifyPhoneNumber(\n    phoneInfoOptions:\n      | string\n      | compat.PhoneSingleFactorInfoOptions\n      | compat.PhoneMultiFactorEnrollInfoOptions\n      | compat.PhoneMultiFactorSignInInfoOptions,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<string> {\n    return this._delegate.verifyPhoneNumber(\n      // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions as any,\n      applicationVerifier\n    );\n  }\n\n  unwrap(): exp.PhoneAuthProvider {\n    return this._delegate;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { FirebaseApp } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class RecaptchaVerifier\n  implements compat.RecaptchaVerifier, Compat<exp.ApplicationVerifier>\n{\n  readonly _delegate: exp.RecaptchaVerifier;\n  type: string;\n  constructor(\n    container: HTMLElement | string,\n    parameters?: object | null,\n    app: FirebaseApp = firebase.app()\n  ) {\n    // API key is required for web client RPC calls.\n    _assert(app.options?.apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n    this._delegate = new exp.RecaptchaVerifier(\n      container,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parameters as any,\n\n      // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n      // @ts-ignore\n      app.auth!()\n    );\n    this.type = this._delegate.type;\n  }\n  clear(): void {\n    this._delegate.clear();\n  }\n  render(): Promise<number> {\n    return this._delegate.render();\n  }\n  verify(): Promise<string> {\n    return this._delegate.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport * as impl from '@firebase/auth/internal';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\nimport { FirebaseError } from '@firebase/util';\n\nimport * as types from '@firebase/auth-types';\nimport { name, version } from './package.json';\nimport { Auth } from './src/auth';\nimport { PhoneAuthProvider as CompatAuthProvider } from './src/phone_auth_provider';\nimport { RecaptchaVerifier as CompatRecaptchaVerifier } from './src/recaptcha_verifier';\n\nconst AUTH_TYPE = 'auth-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'auth-compat': types.FirebaseAuth;\n  }\n}\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    auth: {\n      (app?: FirebaseApp): types.FirebaseAuth;\n      Auth: typeof types.FirebaseAuth;\n      EmailAuthProvider: typeof types.EmailAuthProvider;\n      EmailAuthProvider_Instance: typeof types.EmailAuthProvider_Instance;\n      FacebookAuthProvider: typeof types.FacebookAuthProvider;\n      FacebookAuthProvider_Instance: typeof types.FacebookAuthProvider_Instance;\n      GithubAuthProvider: typeof types.GithubAuthProvider;\n      GithubAuthProvider_Instance: typeof types.GithubAuthProvider_Instance;\n      GoogleAuthProvider: typeof types.GoogleAuthProvider;\n      GoogleAuthProvider_Instance: typeof types.GoogleAuthProvider_Instance;\n      OAuthProvider: typeof types.OAuthProvider;\n      SAMLAuthProvider: typeof types.SAMLAuthProvider;\n      PhoneAuthProvider: typeof types.PhoneAuthProvider;\n      PhoneAuthProvider_Instance: typeof types.PhoneAuthProvider_Instance;\n      PhoneMultiFactorGenerator: typeof types.PhoneMultiFactorGenerator;\n      RecaptchaVerifier: typeof types.RecaptchaVerifier;\n      RecaptchaVerifier_Instance: typeof types.RecaptchaVerifier_Instance;\n      TwitterAuthProvider: typeof types.TwitterAuthProvider;\n      TwitterAuthProvider_Instance: typeof types.TwitterAuthProvider_Instance;\n    };\n  }\n  interface FirebaseApp {\n    auth?(): types.FirebaseAuth;\n  }\n}\n\n// Create auth components to register with firebase.\n// Provides Auth public APIs.\nfunction registerAuthCompat(instance: _FirebaseNamespace): void {\n  instance.INTERNAL.registerComponent(\n    new Component(\n      AUTH_TYPE,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app-compat').getImmediate();\n        const authProvider = container.getProvider('auth');\n        return new Auth(app, authProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps({\n        ActionCodeInfo: {\n          Operation: {\n            EMAIL_SIGNIN: impl.ActionCodeOperation.EMAIL_SIGNIN,\n            PASSWORD_RESET: impl.ActionCodeOperation.PASSWORD_RESET,\n            RECOVER_EMAIL: impl.ActionCodeOperation.RECOVER_EMAIL,\n            REVERT_SECOND_FACTOR_ADDITION:\n              impl.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n            VERIFY_AND_CHANGE_EMAIL:\n              impl.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n            VERIFY_EMAIL: impl.ActionCodeOperation.VERIFY_EMAIL\n          }\n        },\n        EmailAuthProvider: impl.EmailAuthProvider,\n        FacebookAuthProvider: impl.FacebookAuthProvider,\n        GithubAuthProvider: impl.GithubAuthProvider,\n        GoogleAuthProvider: impl.GoogleAuthProvider,\n        OAuthProvider: impl.OAuthProvider,\n        SAMLAuthProvider: impl.SAMLAuthProvider,\n        PhoneAuthProvider: CompatAuthProvider,\n        PhoneMultiFactorGenerator: impl.PhoneMultiFactorGenerator,\n        RecaptchaVerifier: CompatRecaptchaVerifier,\n        TwitterAuthProvider: impl.TwitterAuthProvider,\n        Auth,\n        AuthCredential: impl.AuthCredential,\n        Error: FirebaseError\n      })\n      .setInstantiationMode(InstantiationMode.LAZY)\n      .setMultipleInstances(false)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase as _FirebaseNamespace);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}